#
# Makefile for XZ with Intel C/C++ (MSVC++ doesn't and won't do C99)
#
# $Id: NMakefile 6361 2011-03-03 22:29:36Z cloyce $
#

CC=icl
# With v11.1 (20090903), -Qipo is absolutely necessary if any optimization is
# to be used at all.
CFLAGS = -MT -O2 -Qipo -nologo -Qstd=c99 /W4 \
	 -D_FILE_OFFSET_BITS=64 -D_CRT_SECURE_NO_DEPRECATE -DHAVE_CONFIG_H \
	 -DREPLACE_GETOPT -DLZMA_API_STATIC \
	 -I. \
	 -Iwindows \
	 -Isrc/common \
	 -Isrc/liblzma/api \
	 -Isrc/liblzma/common \
	 -Isrc/liblzma/check \
	 -Isrc/liblzma/rangecoder \
	 -Isrc/liblzma/lz \
	 -Isrc/liblzma/lzma \
	 -Isrc/liblzma/delta \
	 -Isrc/liblzma/simple \
	 -Isrc/liblzma/subblock

COMMON_SOURCES = \
	src\\liblzma\\common\\alone_decoder.c \
	src\\liblzma\\common\\alone_encoder.c \
	src\\liblzma\\common\\auto_decoder.c \
	src\\liblzma\\common\\block_buffer_decoder.c \
	src\\liblzma\\common\\block_buffer_encoder.c \
	src\\liblzma\\common\\block_decoder.c \
	src\\liblzma\\common\\block_encoder.c \
	src\\liblzma\\common\\block_header_decoder.c \
	src\\liblzma\\common\\block_header_encoder.c \
	src\\liblzma\\common\\block_util.c \
	src\\liblzma\\common\\common.c \
	src\\liblzma\\common\\easy_buffer_encoder.c \
	src\\liblzma\\common\\easy_decoder_memusage.c \
	src\\liblzma\\common\\easy_encoder.c \
	src\\liblzma\\common\\easy_encoder_memusage.c \
	src\\liblzma\\common\\easy_preset.c \
	src\\liblzma\\common\\filter_buffer_decoder.c \
	src\\liblzma\\common\\filter_buffer_encoder.c \
	src\\liblzma\\common\\filter_common.c \
	src\\liblzma\\common\\filter_decoder.c \
	src\\liblzma\\common\\filter_encoder.c \
	src\\liblzma\\common\\filter_flags_decoder.c \
	src\\liblzma\\common\\filter_flags_encoder.c \
	src\\liblzma\\common\\index.c \
	src\\liblzma\\common\\index_decoder.c \
	src\\liblzma\\common\\index_encoder.c \
	src\\liblzma\\common\\index_hash.c \
	src\\liblzma\\common\\stream_buffer_decoder.c \
	src\\liblzma\\common\\stream_buffer_encoder.c \
	src\\liblzma\\common\\stream_decoder.c \
	src\\liblzma\\common\\stream_encoder.c \
	src\\liblzma\\common\\stream_flags_common.c \
	src\\liblzma\\common\\stream_flags_decoder.c \
	src\\liblzma\\common\\stream_flags_encoder.c \
	src\\liblzma\\common\\vli_decoder.c \
	src\\liblzma\\common\\vli_encoder.c \
	src\\liblzma\\common\\vli_size.c \
	src\\liblzma\\check\\check.c \
	src\\liblzma\\check\\crc32_table.c \
	src\\liblzma\\check\\crc64_table.c \
	src\\liblzma\\check\\sha256.c \
	src\\liblzma\\rangecoder\\price_table.c \
	src\\liblzma\\lz\\lz_decoder.c \
	src\\liblzma\\lz\\lz_encoder.c \
	src\\liblzma\\lz\\lz_encoder_mf.c \
	src\\liblzma\\lzma\\fastpos_table.c \
	src\\liblzma\\lzma\\lzma2_decoder.c \
	src\\liblzma\\lzma\\lzma2_encoder.c \
	src\\liblzma\\lzma\\lzma_decoder.c \
	src\\liblzma\\lzma\\lzma_encoder.c \
	src\\liblzma\\lzma\\lzma_encoder_optimum_fast.c \
	src\\liblzma\\lzma\\lzma_encoder_optimum_normal.c \
	src\\liblzma\\lzma\\lzma_encoder_presets.c \
	src\\liblzma\\delta\\delta_common.c \
	src\\liblzma\\delta\\delta_decoder.c \
	src\\liblzma\\delta\\delta_encoder.c \
	src\\liblzma\\simple\\arm.c \
	src\\liblzma\\simple\\armthumb.c \
	src\\liblzma\\simple\\ia64.c \
	src\\liblzma\\simple\\powerpc.c \
	src\\liblzma\\simple\\simple_coder.c \
	src\\liblzma\\simple\\simple_decoder.c \
	src\\liblzma\\simple\\simple_encoder.c \
	src\\liblzma\\simple\\sparc.c \
	src\\liblzma\\simple\\x86.c \
	src\\liblzma\\check\\crc32_fast.c \
	src\\liblzma\\check\\crc64_fast.c \
	windows\\getopt_long.c
	
XZ_SOURCES = \
	src\\xz\\args.c \
	src\\xz\\coder.c \
	src\\xz\\file_io.c \
	src\\xz\\hardware.c \
	src\\xz\\main.c \
	src\\xz\\message.c \
	src\\xz\\options.c \
	src\\xz\\signals.c \
	src\\xz\\suffix.c \
	src\\xz\\util.c

COMMON_OBJECTS = $(COMMON_SOURCES:.c=.obj)
XZ_OBJECTS = $(XZ_SOURCES:.c=.obj) $(COMMON_OBJECTS)

all: xz.exe

.c.obj:
	$(CC) $(CFLAGS) /c $*.c /Fo$*.obj

.c.i:
	$(CC) $(CFLAGS) /C /E $*.c > $*.i

config.h: windows\\config.h.icl
	copy windows\config.h.icl config.h

clean:
	-del /f /q $(COMMON_OBJECTS)
	-del /f /q $(XZ_OBJECTS) tests\\*.obj
	-del /f /q $(COMMON_OBJECTS:.obj=.i)
	-del /f /q $(XZ_OBJECTS:.obj=.i)
	-del /f /q xz.exe tests\\*.exe tests\\compress_generated*
	-del /f /q config.h

test: tests\create_compress_files.exe tests\test_stream_flags.exe tests\test_block_header.exe tests\test_filter_flags.exe tests\test_check.exe tests\test_index.exe

tests\create_compress_files.exe: config.h tests\create_compress_files.obj $(COMMON_OBJECTS)
	$(CC) $(CFLAGS) -Fe$@ $(COMMON_OBJECTS) tests\create_compress_files.obj
tests\test_stream_flags.exe: config.h tests\test_stream_flags.obj $(COMMON_OBJECTS)
	$(CC) $(CFLAGS) -Fe$@ $(COMMON_OBJECTS) tests\test_stream_flags.obj
tests\test_block_header.exe: config.h tests\test_block_header.obj $(COMMON_OBJECTS)
	$(CC) $(CFLAGS) -Fe$@ $(COMMON_OBJECTS) tests\test_block_header.obj
tests\test_filter_flags.exe: config.h tests\test_filter_flags.obj $(COMMON_OBJECTS)
	$(CC) $(CFLAGS) -Fe$@ $(COMMON_OBJECTS) tests\test_filter_flags.obj
tests\test_check.exe: config.h tests\test_check.obj $(COMMON_OBJECTS)
	$(CC) $(CFLAGS) -Fe$@ $(COMMON_OBJECTS) tests\test_check.obj
tests\test_index.exe: config.h tests\test_index.obj $(COMMON_OBJECTS)
	$(CC) $(CFLAGS) -Fe$@ $(COMMON_OBJECTS) tests\test_index.obj

xz.exe: config.h $(XZ_OBJECTS)
	$(CC) $(CFLAGS) -Fe$@ $(XZ_OBJECTS)
