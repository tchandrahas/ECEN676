!---------------------------------------------------------------------------
!
! BINMAT3: 3 dimensional logical matrices
!
! Copyright (C) Dylan Jayatilaka, 1998
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: binmat3.foo,v 1.2.2.1 2003/11/13 05:34:14 reaper Exp $
!---------------------------------------------------------------------------

module BINMAT3

   implicit none

contains

   create(dim1,dim2,dim3)
   ! Create the object with the desired bounds
      self :: PTR
      dim1,dim2,dim3 :: INT, IN
      allocate(self(dim1,dim2,dim3))
      ADD_MEMORY(dim1*dim2*dim3*BIN_SIZE)
   end

   create(lb1,ub1,lb2,ub2,lb3,ub3)
   ! Create the object with the desired bounds
      self :: PTR
      lb1,lb2,lb3,ub1,ub2,ub3 :: INT, IN
      allocate(self(lb1:ub1,lb2:ub2,lb3:ub3))
      ADD_MEMORY((ub1-lb1+1)*(ub2-lb2+1)*(ub3-lb3+1)*BIN_SIZE)
   end

   create(bounds1,bounds2,bounds3)
   ! Create the object with the desired bounds
      self :: PTR
      bounds1,bounds2,bounds3 :: INTVEC(2)
      .create(bounds1(1),bounds1(2),bounds2(1),bounds2(2),bounds3(1),bounds3(2))
   end

   destroy
   ! Destroy the object
      self :: PTR
      DELETE_MEMORY(size(self)*BIN_SIZE)
      deallocate(self)
   end

end
