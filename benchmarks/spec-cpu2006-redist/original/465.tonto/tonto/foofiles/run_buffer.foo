! Copyright (C) Dylan Jayatilaka, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: run_buffer.foo,v 1.4.2.2 2003/10/17 09:01:29 reaper Exp $

program run_buffer

   use TYPES
   use SYSTEM
   use TEXTFILE
   use BUFFER

   implicit none

   b :: BUFFER
   word,word1 :: STR
   real :: REAL
   int :: INT

   tonto.initialize

   stdout.create_stdout
   stdout.open

   stdout.text("I am creating a buffer below ...")
   stdout.flush

   b.set(" this is a buffer string, 0.1 0.2 10 ! comment","!")

   stdout.show("buffer string =",b.string)
   stdout.show("item start    =",b.item_start)
   stdout.show("item end      =",b.item_end)
   stdout.show("item index    =",b.item_index)
   stdout.show("n_items       =",b.n_items)
   stdout.show("analysed      =",b.analysed)
   stdout.show("comment_chars =",b.comment_chars)

   stdout.flush
   stdout.text("Now I am extracting from this buffer ...")
   stdout.flush

   b.get(word)
   stdout.show("1st word =",word)

   b.get(word)
   stdout.show("2nd word =",word)

   b.get(word)
   stdout.show("3rd word =",word)

   b.get(word)
   stdout.show("4th word =",word)

   b.get(word)
   stdout.show("5th word =",word)

   b.get(word)
   stdout.show("6th word =",word)

   b.get(real)
   stdout.show("7th real =",real)

   b.get(int)
   stdout.show("8th int  =",int)

   stdout.flush
   stdout.text("Now move back to the 2nd item and get it ...")
   stdout.flush

   b.move_to_item(2)
   b.get(word)
   stdout.show("2nd word =",word)

   stdout.flush
   stdout.text("Now I will print out a cursor to the current position")
   stdout.flush

   word1 = b.cursor_pointer
   stdout.flush
   stdout.show("buffer string =", b.string)
   stdout.text("Cursor---------"//word1.align_left.trim)

   stdout.flush
   stdout.text('The last item I processed was "'// b.previous_item.trim //'"')

end
