! Copyright (C) Dylan Jayatilaka, 2002
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: run_cif.foo,v 1.2.2.1 2003/04/01 05:51:38 reaper Exp $

program run_cif

  use TYPES
  use SYSTEM
  use TEXTFILE
  use CIF

  implicit none

  cif :: CIF*
  ID,str :: STR
  strvec :: STRVEC*
  vec,err :: REALVEC*
  real,del :: REAL

  tonto.initialize

  stdout.create_stdout
  stdout.open

  cif.create("cif_example.cif")
  cif.find_data_block("alge")
  ID = "_chemical_name_systematic"
  cif.read_item(ID,str,strvec)

  stdout.flush
  stdout.text("CIF test:")
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.show("value  =",str)

  ID = "_cell_length_b"
  cif.read_item(ID,str,strvec)
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.show("value  =",str)

  ID = "_cell_length_a"
  cif.read_item(ID,str,strvec)
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.show("value  =",str)

  ID = "_cell_length_a"
  cif.read_item(ID,real,del)
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.show("value  =",real)
  stdout.show("error  =",del)

! ID = "_refine_special_details"
! cif.read_item(ID,str,strvec)
! stdout.flush
! stdout.show("ID     =",ID)
! stdout.text("value:")
! stdout.put(strvec,"column")

  ID = "_atom_site_label"
  cif.read_looped_item(ID,strvec)
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.text("value:")
  stdout.put(strvec,"column")
  strvec.destroy

  ID = "_atom_site_fract_y"
  cif.read_looped_item(ID,strvec)
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.text("value:")
  stdout.put(strvec,"column")
  strvec.destroy

  ID = "_atom_site_fract_y"
  cif.read_looped_item(ID,vec,err)
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.text("vec value:")
  stdout.put(vec,"column")
  stdout.text("err value:")
  stdout.put(err,"column")
  vec.destroy
  err.destroy

  ID = "_atom_site_label"
  cif.read_item(ID,str,strvec)
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.show("value  =",str)

  ID = "_publ_contact_author_email"
  cif.read_item(ID,str,strvec)
  stdout.flush
  stdout.show("ID     =",ID)
  stdout.show("value  =",str)

end

