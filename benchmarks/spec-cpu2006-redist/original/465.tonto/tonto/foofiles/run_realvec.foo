! Copyright (C) Dylan Jayatilaka, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: run_realvec.foo,v 1.4.2.1 2003/11/13 06:34:04 reaper Exp $

program run_REALVEC

   implicit none

   p :: REALVEC(2)
   directions :: REALMAT(2,2)
   arcsin,fret,tol,ftol :: REAL
   algorithm :: STR

   tonto.initialize

   stdout.create_stdout
   stdout.open

   stdout.flush
   stdout.text("Minimise the function (x-1)^2 + (y-1)^2 + 1 using the")
   stdout.text("Powell method")
   stdout.flush
   stdout.text("This function is defined in the TEST module")
   stdout.flush

   tol = TOL(7)
   ftol = TOL(7)
   p = [ 0.1, 0.1
   directions(1,1) = 1
   directions(2,1) = 1
   directions(1,2) = 1
   directions(2,2) =-1

   stdout.flush
   stdout.show("Start point   =",p)
   stdout.flush
   stdout.text("Initial directions (as columns):")
   stdout.put(directions)

   stdout.flush
   stdout.text("Minimise the function ...")

   arcsin.minimise_powell(p,directions,fret,tol,ftol)

   stdout.flush
   stdout.text("Answer:")
   stdout.show("Minimum point =",p)
   stdout.show("Minimum value =",fret)

   stdout.flush
   stdout.text("Now minimise the same functions using the FR")
   stdout.text("(Fletcher-Reeves) method. This requires the ")
   stdout.text("the derivative of the function as well.")
   stdout.flush

   p = [ 0.1, 0.1
   algorithm = "Fletcher-Reeves"
   arcsin.minimise_FRPR(darcsin,p,fret,tol,ftol,algorithm)

   stdout.flush
   stdout.text("Answer:")
   stdout.show("Minimum point =",p)
   stdout.show("Minimum value =",fret)

   stdout.flush
   stdout.text("Now minimise the same functions using the BFGS")
   stdout.text("(Broyden-Fletcher-Goldfarb-Shanno) method. This also")
   stdout.text("requires the derivative of the function")
   stdout.flush


   p = [ 0.1, 0.1
   arcsin.minimise_BFGS(darcsin,p,fret,tol,ftol)

   stdout.flush
   stdout.text("Answer:")
   stdout.show("Minimum point =",p)
   stdout.show("Minimum value =",fret)

end
