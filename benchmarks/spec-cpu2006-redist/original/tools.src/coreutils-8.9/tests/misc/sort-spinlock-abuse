#!/bin/sh
# trigger a bug that would make parallel sort use 100% of one or more
# CPU while blocked on output.

# Copyright (C) 2010-2011 Free Software Foundation, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. "${srcdir=.}/init.sh"; path_prepend_ ../src
print_ver_ sort

grep '^#define HAVE_PTHREAD_T 1' "$CONFIG_HEADER" > /dev/null ||
  skip_test_ 'requires pthreads'

seq 100000 > in || framework_failure_
mkfifo fifo || framework_failure_

# Arrange for sort to require 5.0+ seconds of wall-clock time,
# while actually using far less than 1 second of CPU time.
(for i in $(seq 50); do read line; echo $i; sleep .1; done
  cat > /dev/null) < fifo &

# Limit CPU time to 1 second
ulimit -t 1
sort --parallel=2 in > fifo || fail=1

Exit $fail
